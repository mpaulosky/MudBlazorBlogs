# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test .NET projects

on:
  push:
    branches: ["main"]
    paths: ["src/**"]
  pull_request:
    branches: ["main"]
    types: [opened, synchronize, reopened, closed]
    paths: ["src/**"]
  workflow_dispatch:

jobs:
  build:
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: ./global.json

      - name: Cache NuGet Packages
        id: nuget-packages
        uses: actions/cache@v3
        env:
          cache-name: nuget-package-cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-${{ env.cache-name }}

      - name: Workload install
        run: dotnet workload restore
    
      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-restore --no-build --settings runsettings.xml

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: "5.x"

      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.10.2
      - run: |
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"

      - name: Codecov
        uses: codecov/codecov-action@v4.0.1

      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: MudBlazorBlogs-test-results
          path: TestResults

        # Use always() to always run this step to
        # publish test results when there are test failures
        if: ${{ always() }}

